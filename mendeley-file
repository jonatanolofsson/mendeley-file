#!/usr/bin/env python
""" Open reference with mendeley """
import os
import sys
import sqlite3
import argparse

MENDELEY_DIR = os.path.expanduser("~/.local/share/data/Mendeley Ltd./Mendeley Desktop")


def parse_args(*argv):
    """ Parse args """
    parser = argparse.ArgumentParser(description="Open files associated with a Mendeley citation")
    parser.add_argument('--xdgpdf',
                        help="Open with default pdf reader instead of Mendeley",
                        action="store_true")
    parser.add_argument('key', help="Citation key", nargs='+')
    return parser.parse_args(argv)


def main(*argv):
    """ Main """
    args = parse_args(*argv)

    mendeley_db = None

    try:
        for file_ in os.listdir(MENDELEY_DIR):
            if '@' in file_:
                if file_.split("@")[-1] == "www.mendeley.com.sqlite":
                    mendeley_db = os.path.join(MENDELEY_DIR, file_)

    except OSError:
        print("Could not find Mendeley directory")
        return 1
    if not mendeley_db:
        print("Could not find Mendeley database")
        return 1

    try:
        cur = sqlite3.connect(mendeley_db).cursor()

        for key in args.key:
            documents = list(cur.execute(
                "select id from Documents where citationKey == '{}' limit 1".format(key)))
            if not documents:
                print("Could not find any documents with citation key '%s'" % key)
                continue

            for document in documents:
                doc_id = document[0]

                files = list(cur.execute(
                    "select hash from DocumentFiles where documentId == {}".format(doc_id)))
                if not files:
                    print(("Document with citation key '{}'"
                           " has no files associated with it").format(key))
                    continue

                for file_ in files:
                    file_hash = file_[0]
                    cur.execute("select localUrl from Files where hash = '{}'".format(file_hash))
                    for row in cur:
                        file_url = row[0]
                        print("Opening {}".format(file_url))
                        app = 'xdg-open' if args.xdgpdf else 'mendeley'
                        cmd = "{app} '{file}' &> /dev/null &".format(app=app, file=file_url)
                        print(cmd)
                        os.system(cmd)

        cur.close()

    except sqlite3.OperationalError as exc:
        print("Database error: {}".format(exc))



if __name__ == '__main__':
    exit(main(*sys.argv[1:]))
